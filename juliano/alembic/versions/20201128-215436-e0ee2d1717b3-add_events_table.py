"""add events table

Revision ID: e0ee2d1717b3
Revises: e9f39cd18f6f
Create Date: 2020-11-28 21:54:36.785346

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "e0ee2d1717b3"
down_revision = "e9f39cd18f6f"
branch_labels = None
depends_on = None


def upgrade():
    events = op.create_table(
        "events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("grade", sa.Integer(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    if conn := op.get_bind():
        items = sa.sql.table(
            "items",
            sa.sql.column("id", sa.Integer()),
            sa.sql.column("repitition_number", sa.Integer()),
            sa.sql.column("easiness_factor", sa.Integer()),
            sa.sql.column("last_learned", sa.DateTime()),
        )

        s = items.select()
        items_data = conn.execute(s).fetchall()

        events_data = [
            {"item_id": id, "created": c}
            for (id, n, ef, c) in items_data
            if c is not None
            for _ in range(n)
        ]

        op.bulk_insert(events, events_data)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("events")
    # ### end Alembic commands ###
